{"version":3,"sources":["images/logo.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/EditProfilePopup.js","utils/Api.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","logo","alt","CurrentUserContext","createContext","Card","props","currentUser","useContext","isOwn","card","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","link","onClick","CardClick","type","onCardDelete","name","onCardLike","length","Main","avatar","about","onEditAvatar","onEditProfile","onAddPlace","cards","map","onCardClick","handleCardLike","handleCardDelete","Footer","PopupWithForm","isOpen","id","method","title","children","onClose","ImagePopup","status","links","EditProfilePopup","React","useState","UserName","setName","description","setDescription","useEffect","_","required","maxLength","minLength","value","onChange","evt","target","preventDefault","onUpdateUser","api","data","this","_url","url","_headers","headers","fetch","then","_checkStatus","names","body","JSON","stringify","console","log","checkCard","res","ok","json","Promise","reject","Authorization","EditAvatarPopup","urlRef","useRef","placeholder","ref","onUpdateAvatar","current","AddPlacePopup","cardName","setCardName","cardLink","setCardLink","App","isEditPlacePopupOpen","setIsEditPlace","isEditAvatarPopupOpen","setIsEditAvatar","isEditProfilePopupOpen","setIsEditProfile","selectedCard","setSelectedCard","setCurrentUser","setCards","closeAllPopups","getInfo","catch","error","receiveCardsInServer","Provider","putLikes","newCard","newCards","c","deleteCards","newCardsList","filter","editInfoUser","item","upCardsToTheServer","editAvatar","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.045a4d5f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.a307e1c4.svg\";","import React from \"react\";\r\nimport logo from \"../images/logo.svg\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header\">\r\n      <img className=\"header__logo\" src={logo} alt=\"Логотип Место\"></img>\r\n    </header>\r\n  );\r\n}\r\nexport default Header;\r\n","import { createContext } from \"react\";\r\n\r\nexport const CurrentUserContext = createContext();\r\n","import React, { useContext } from \"react\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\n\r\nfunction Card(props) {\r\n  // Получение контекста\r\n  const currentUser = useContext(CurrentUserContext);\r\n\r\n  // Сравниваем свой id с id карточки\r\n  const isOwn = props.card.owner._id === currentUser._id;\r\n\r\n  // Проверка на удаление карточки (в className)\r\n  const cardDeleteButtonClassName = `cards__delete ${\r\n    isOwn ? \"\" : \"cards__delete_inactive\"\r\n  }`;\r\n\r\n  // Проверка поставили лайк или нет\r\n  const isLiked = props.card.likes.some((i) => i._id === currentUser._id);\r\n\r\n  // Отображение лайка (в className)\r\n  const cardLikeButtonClassName = `cards__like ${\r\n    isLiked ? \"cards__like_active\" : \"\"\r\n  }`;\r\n\r\n  // Клик по картинке\r\n  function handleClick() {\r\n    props.CardClick(props.card);\r\n  }\r\n  // Отслеживание лайков\r\n  function handleLikeClick() {\r\n    props.onCardLike(props.card);\r\n  }\r\n  // Удаление карточки\r\n  function handleDeleteClick() {\r\n    props.onCardDelete(props.card);\r\n  }\r\n\r\n  return (\r\n    <div className=\"cards__item\">\r\n      <img\r\n        className=\"cards__image\"\r\n        src={props.card.link}\r\n        alt=\"\"\r\n        onClick={handleClick}\r\n      ></img>\r\n      <button\r\n        className={cardDeleteButtonClassName}\r\n        type=\"button\"\r\n        onClick={handleDeleteClick}\r\n      ></button>\r\n      <div className=\"cards__info\">\r\n        <h2 className=\"cards__text\">{props.card.name}</h2>\r\n        <div className=\"cards__container\">\r\n          <button\r\n            className={cardLikeButtonClassName}\r\n            type=\"button\"\r\n            onClick={handleLikeClick}\r\n          ></button>\r\n          <p className=\"cards__like_count\">{props.card.likes.length}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Card;\r\n","import React, { useContext } from \"react\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\nimport Card from \"./Card\";\r\n\r\nconst Main = (props) => {\r\n  const { name, avatar, about } = useContext(CurrentUserContext);\r\n\r\n  return (\r\n    <main className=\"main\">\r\n      <section className=\"profile\">\r\n        <div className=\"profile__avatar_box\">\r\n          <img className=\"profile__image\" src={avatar} alt=\"Аватар\"></img>\r\n          <button\r\n            className=\"profile__avatar\"\r\n            onClick={props.onEditAvatar}\r\n          ></button>\r\n        </div>\r\n        <div className=\"profile__info\">\r\n          <div className=\"profile__button\">\r\n            <h1 className=\"profile__author\">{name}</h1>\r\n            <button\r\n              className=\"profile__edit profile__edit_open_popup\"\r\n              type=\"button\"\r\n              onClick={props.onEditProfile}\r\n            ></button>\r\n          </div>\r\n          <p className=\"profile__description\">{about}</p>\r\n        </div>\r\n        <button\r\n          className=\"profile__add\"\r\n          type=\"button\"\r\n          onClick={props.onAddPlace}\r\n        ></button>\r\n      </section>\r\n      <section className=\"cards\">\r\n        {props.cards.map((card) => {\r\n          return (\r\n            <Card\r\n              card={card}\r\n              CardClick={props.onCardClick}\r\n              key={card._id}\r\n              onCardLike={props.handleCardLike}\r\n              onCardDelete={props.handleCardDelete}\r\n            />\r\n          );\r\n        })}\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p className=\"footer__author\">&copy;2020. Илья Шнырев</p>\r\n    </footer>\r\n  );\r\n}\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\nfunction PopupWithForm(props) {\r\n  return (\r\n    <section\r\n      className={`popup ${props.name} ${props.isOpen ? \"popup_opened\" : \"\"}`}\r\n      id=\"edit__popup\"\r\n    >\r\n      <form method=\"POST\" className=\"popup__container\" name={props.name}>\r\n        <h2 className=\"popup__heading\">{props.title}</h2>\r\n        {props.children}\r\n        <button\r\n          type=\"reset\"\r\n          className=\"popup__close\"\r\n          onClick={props.onClose}\r\n        ></button>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\nexport default PopupWithForm;\r\n","import React from \"react\";\r\n\r\nfunction ImagePopup(props) {\r\n  return (\r\n    <section\r\n      className={`popup photo ${props.card.status ? \"popup_opened\" : \"\"}`}\r\n    >\r\n      <div className=\"photo__container\">\r\n        <img className=\"photo__image\" src={props.card.links} alt=\"\"></img>\r\n        <p className=\"photo__text\">{props.card.title}</p>\r\n        <button\r\n          type=\"reset\"\r\n          className=\"popup__close photo__close\"\r\n          onClick={props.onClose}\r\n        ></button>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\nexport default ImagePopup;\r\n","import React, { useContext } from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\n\r\nconst EditProfilePopup = (props) => {\r\n  const [UserName, setName] = React.useState(\"\");\r\n  const [description, setDescription] = React.useState(\"\");\r\n  const currentUser = useContext(CurrentUserContext);\r\n\r\n  React.useEffect(\r\n    (_) => {\r\n      setName(currentUser.name);\r\n      setDescription(currentUser.about);\r\n    },\r\n    [currentUser]\r\n  );\r\n\r\n  const handleChangeName = (evt) => {\r\n    setName(evt.target.value);\r\n  };\r\n  const handleChangeDescription = (evt) => {\r\n    setDescription(evt.target.value);\r\n  };\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    props.onUpdateUser(UserName, description);\r\n  };\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name=\"popup\"\r\n      title=\"Редактировать профиль\"\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n    >\r\n      <label className=\"popup__label\">\r\n        <input\r\n          id=\"name-input\"\r\n          type=\"text\"\r\n          name=\"name\"\r\n          className=\"popup__text popup__text_name_input\"\r\n          required\r\n          maxLength=\"40\"\r\n          minLength=\"2\"\r\n          value={UserName || \"\"}\r\n          onChange={handleChangeName}\r\n        ></input>\r\n        <span className=\"popup__error\" id=\"name-input-error\"></span>\r\n      </label>\r\n      <label className=\"popup__label\">\r\n        <input\r\n          id=\"job-input\"\r\n          type=\"text\"\r\n          name=\"job\"\r\n          className=\"popup__text popup__text_job_input\"\r\n          required\r\n          maxLength=\"200\"\r\n          minLength=\"2\"\r\n          value={description || \"\"}\r\n          onChange={handleChangeDescription}\r\n        ></input>\r\n        <span className=\"popup__error\" id=\"job-input-error\"></span>\r\n      </label>\r\n      <button\r\n        type=\"submit\"\r\n        className=\"popup__button popup__button_form_save\"\r\n        onClick={handleSubmit}\r\n      >\r\n        Сохранить\r\n      </button>\r\n    </PopupWithForm>\r\n  );\r\n};\r\n\r\nexport default EditProfilePopup;\r\n","class Api {\r\n  constructor(data) {\r\n    this._url = data.url;\r\n    this._headers = data.headers;\r\n  }\r\n\r\n  // Информация о пользователе\r\n  getInfo() {\r\n    return fetch(`${this._url}/users/me`, {\r\n      method: \"GET\",\r\n      headers: this._headers,\r\n    }).then(this._checkStatus);\r\n  }\r\n  // Добавление карточек с сервера\r\n  receiveCardsInServer() {\r\n    return fetch(`${this._url}/cards`, {\r\n      method: \"GET\",\r\n      headers: this._headers,\r\n    }).then(this._checkStatus);\r\n  }\r\n  // Добавление карточек из попап\r\n  upCardsToTheServer(names, links) {\r\n    return fetch(`${this._url}/cards`, {\r\n      method: \"POST\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: names,\r\n        link: links,\r\n      }),\r\n    }).then(this._checkStatus);\r\n  }\r\n  // Редактирование информации о пользователе\r\n  editInfoUser(names, links) {\r\n    console.log(links);\r\n    return fetch(`${this._url}/users/me`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: names,\r\n        about: links,\r\n      }),\r\n    }).then(this._checkStatus);\r\n  }\r\n  // Удаление карточки\r\n  deleteCards(id) {\r\n    return fetch(`${this._url}/cards/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: this._headers,\r\n    }).then(this._checkStatus);\r\n  }\r\n  // Редактирование аватара\r\n  editAvatar(data) {\r\n    return fetch(`${this._url}/users/me/avatar`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        avatar: data,\r\n      }),\r\n    }).then(this._checkStatus);\r\n  }\r\n  // Постановка и удаление лайка\r\n  putLikes(id, checkCard) {\r\n    if (checkCard) {\r\n      return fetch(`${this._url}/cards/likes/${id}`, {\r\n        method: \"PUT\",\r\n        headers: this._headers,\r\n      }).then(this._checkStatus);\r\n    } else {\r\n      return fetch(`${this._url}/cards/likes/${id}`, {\r\n        method: \"DELETE\",\r\n        headers: this._headers,\r\n      }).then(this._checkStatus);\r\n    }\r\n  }\r\n  // Проверка на ошибки\r\n  _checkStatus(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  }\r\n}\r\nconst api = new Api({\r\n  url: \"https://mesto.nomoreparties.co/v1/cohort-17\",\r\n  headers: {\r\n    Authorization: \"ef54f240-380e-482d-82be-6a3e691e6be6\",\r\n    \"content-type\": \"application/json\",\r\n  },\r\n});\r\n\r\nexport default api;\r\n","import React, { useRef } from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nconst EditAvatarPopup = (props) => {\r\n  const urlRef = useRef(\"\");\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    props.onUpdateAvatar(urlRef.current.value);\r\n  };\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name=\"popup__avatar\"\r\n      title=\"Обновить аватар\"\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n    >\r\n      <label className=\"popup__label\">\r\n        <input\r\n          type=\"url\"\r\n          id=\"url-input\"\r\n          name=\"link\"\r\n          placeholder=\"Ссылка на аватар\"\r\n          className=\"popup__text popup__text_avatar\"\r\n          required\r\n          ref={urlRef}\r\n        ></input>\r\n        <span className=\"popup__error\" id=\"url-input-error\"></span>\r\n      </label>\r\n      <button\r\n        type=\"submit\"\r\n        className=\"popup__button popup__button_avatar_form\"\r\n        onClick={handleSubmit}\r\n      >\r\n        Сохранить\r\n      </button>\r\n    </PopupWithForm>\r\n  );\r\n};\r\n\r\nexport default EditAvatarPopup;\r\n","import React, { useState } from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nconst AddPlacePopup = (props) => {\r\n  const [cardName, setCardName] = useState(\"\");\r\n  const [cardLink, setCardLink] = useState(\"\");\r\n\r\n  const handleChangeName = (evt) => {\r\n    setCardName(evt.target.value);\r\n  };\r\n  const handleChangeLink = (evt) => {\r\n    setCardLink(evt.target.value);\r\n  };\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    props.onAddPlace(cardName, cardLink);\r\n  };\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name=\"popup_cards\"\r\n      title=\"Новое место\"\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n    >\r\n      <label className=\"popup__label\">\r\n        <input\r\n          type=\"text\"\r\n          id=\"input-name\"\r\n          value={cardName || \"\"}\r\n          name=\"name\"\r\n          placeholder=\"Название\"\r\n          className=\"popup__text popup__text_name_cards\"\r\n          required\r\n          maxLength=\"30\"\r\n          minLength=\"2\"\r\n          onChange={handleChangeName}\r\n        ></input>\r\n        <span className=\"popup__error\" id=\"input-name-error\"></span>\r\n      </label>\r\n      <label className=\"popup__label\">\r\n        <input\r\n          type=\"url\"\r\n          id=\"url-input\"\r\n          name=\"link\"\r\n          value={cardLink || \"\"}\r\n          placeholder=\"Ссылка на картинку\"\r\n          className=\"popup__text popup__text_job_cards\"\r\n          required\r\n          onChange={handleChangeLink}\r\n        ></input>\r\n        <span className=\"popup__error\" id=\"url-input-error\"></span>\r\n      </label>\r\n      <button\r\n        type=\"submit\"\r\n        className=\"popup__button popup__button_save_form\"\r\n        onClick={handleSubmit}\r\n      >\r\n        Сохранить\r\n      </button>\r\n    </PopupWithForm>\r\n  );\r\n};\r\n\r\nexport default AddPlacePopup;\r\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport api from \"../utils/Api\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\n\nconst App = (_) => {\n  const [isEditPlacePopupOpen, setIsEditPlace] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatar] = React.useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfile] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n\n  // Постановка лайков и отправка на сервер\n  function handleCardLike(card) {\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n    api.putLikes(card._id, !isLiked).then((newCard) => {\n      const newCards = cards.map((c) => (c._id === card._id ? newCard : c));\n      setCards(newCards);\n    });\n  }\n  // Удаление карточки с сервера\n  function handleCardDelete(card) {\n    api.deleteCards(card._id).then((_) => {\n      const newCardsList = cards.filter((value) => card._id !== value._id);\n      setCards(newCardsList);\n    });\n  }\n  // Добавление карточки на сервер\n  function handleAddPlaceSubmit(name, link) {\n    api.upCardsToTheServer(name, link).then((item) => {\n      setCards([item, ...cards]);\n      closeAllPopups();\n    });\n  }\n\n  React.useEffect((_) => {\n    api\n      .getInfo()\n      .then((res) => {\n        setCurrentUser(res);\n      })\n      .catch((error) => console.log(error));\n  }, []);\n\n  React.useEffect((_) => {\n    api\n      .receiveCardsInServer()\n      .then((data) => {\n        setCards(data);\n      })\n      .catch((error) => console.log(error));\n  }, []);\n  // Обновление информации о пользователе\n  function handleUpdateUser(name, about) {\n    api.editInfoUser(name, about).then((item) => {\n      setCurrentUser(item);\n      closeAllPopups();\n    });\n  }\n  // Обновление аватара пользователя\n  function handleUpdateAvatar(url) {\n    api.editAvatar(url).then((item) => {\n      setCurrentUser(item);\n      closeAllPopups();\n    });\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatar(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfile(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsEditPlace(true);\n  }\n\n  function handleCardClick(props) {\n    setSelectedCard({ status: true, title: props.name, links: props.link });\n  }\n  function closeAllPopups() {\n    setIsEditAvatar(false);\n    setIsEditProfile(false);\n    setIsEditPlace(false);\n    setSelectedCard({});\n  }\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n        <Header />\n        <Main\n          onEditProfile={handleEditProfileClick}\n          onAddPlace={handleAddPlaceClick}\n          onEditAvatar={handleEditAvatarClick}\n          onCardClick={handleCardClick}\n          cards={cards}\n          setCards={setCards}\n          handleCardLike={handleCardLike}\n          handleCardDelete={handleCardDelete}\n        />\n        <Footer />\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n        />\n        <AddPlacePopup\n          isOpen={isEditPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit}\n        />\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n        <PopupWithForm name=\"delete__cards\" title=\"Вы уверены?\">\n          <button className=\"popup__button popup__delete_button\">Да</button>\n          <button\n            type=\"reset\"\n            className=\"popup__close popup__delete_close_button\"\n          ></button>\n        </PopupWithForm>\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n        />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}